name: Deploy del front para el BUCKET S3

on:
  push:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Verificar Quality Gate de SonarCloud
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=ObligatorioArbeloRodriguez_FE-React" \
           | jq -r .projectStatus.status)
          if [ "$STATUS" != "OK" ]; then
            echo "El proyecto no pasó el Quality Gate: $STATUS"
            exit 1
          fi
          echo "El proyecto pasó el Quality Gate"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: sonarcloud
    runs-on: ubuntu-24.04
    steps:
      - name: Verificar acceso al código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependencias de Node
        working-directory: ./react
        run: npm install

      - name: Generar build del código
        working-directory: ./react
        run: npx nx build

      - name: Subir artefactos generados
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ${{ github.workspace }}
 #Evaluar si conviene usar una imagen para agilizar el proceso de cada ejecucion de pipeline para no instalar todo cada vez
  selenium:
    name: Test de Selenium
    needs: build
    runs-on: ubuntu-24.04
    steps:

      - name: Descargar artefactos generados para testear
        uses: actions/download-artifact@v4
        with:
           name: build-artifacts

      - name: Instalando dependencias para Testing (Chrome, ChromeDriver, Selenium y HTTP-SV) 
        run: | 
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          npm install selenium-webdriver chromedriver
          npm install http-server 

      - name: Ejecutar prueba Selenium
        run: node seleniumTest.js
  login-aws:
    name: Configurar credenciales AWS
    needs: selenium
    runs-on: ubuntu-24.04
    steps:
      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

  deploy_dev_y_test:
    name: Deploy a ambientes DEV y TEST
    needs: [selenium, login-aws] 
    runs-on: ubuntu-24.04
    steps:
      - name: Descargar artefactos generados
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Deploy al bucket DEV
        run: aws s3 sync ./react/dist/apps/catalog s3://${{ secrets.S3_BUCKET_DEV }}
      - name: Deploy al bucket TEST
        run: aws s3 sync ./react/dist/apps/catalog s3://${{ secrets.S3_BUCKET_TEST }}

  deploy_a_prod:
    name: Deploy a PROD
    needs: [deploy_dev_y_test, login-aws]
    runs-on: ubuntu-24.04
    environment:
      name: production
    steps:
      - name: Descargar artefactos generados
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Deploy a S3 - Producción
        run: aws s3 sync ./react/dist/apps/catalog s3://${{ secrets.S3_BUCKET_PROD }}
